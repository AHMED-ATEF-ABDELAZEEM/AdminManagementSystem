// <auto-generated />
using AdminManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminManagementSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gpa")
                        .HasColumnType("int");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Department_Course", b =>
                {
                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Department_Id")
                        .HasColumnType("int");

                    b.HasKey("Course_Id", "Department_Id");

                    b.HasIndex("Department_Id");

                    b.ToTable("Departments_Courses");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("StudentId");

                    b.HasIndex("DeptId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Student_Course", b =>
                {
                    b.Property<int>("Student_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.HasKey("Student_Id", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("Students_Courses");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Department_Course", b =>
                {
                    b.HasOne("AdminManagementSystem.Models.Course", "Course_ref")
                        .WithMany("Department_Course_ref")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminManagementSystem.Models.Department", "Department_ref")
                        .WithMany("Department_Course_ref")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course_ref");

                    b.Navigation("Department_ref");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Student", b =>
                {
                    b.HasOne("AdminManagementSystem.Models.Department", "Department_ref")
                        .WithMany("Students_ref")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department_ref");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Student_Course", b =>
                {
                    b.HasOne("AdminManagementSystem.Models.Course", "Course_ref")
                        .WithMany("Student_Course_ref")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminManagementSystem.Models.Student", "Student_ref")
                        .WithMany("Student_Course_ref")
                        .HasForeignKey("Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course_ref");

                    b.Navigation("Student_ref");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Course", b =>
                {
                    b.Navigation("Department_Course_ref");

                    b.Navigation("Student_Course_ref");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Department", b =>
                {
                    b.Navigation("Department_Course_ref");

                    b.Navigation("Students_ref");
                });

            modelBuilder.Entity("AdminManagementSystem.Models.Student", b =>
                {
                    b.Navigation("Student_Course_ref");
                });
#pragma warning restore 612, 618
        }
    }
}
